{"version":3,"sources":["../src/providers.js"],"names":["isClassProvider","createClassProvider","createFactoryProvider","createProvider","definition","provider","name","charAt","prototype","length","Class","dependencies","Factory"],"mappings":";;;;;;;;;;QAGgBA,e,GAAAA,e;QAYAC,mB,GAAAA,mB;QAMAC,qB,GAAAA,qB;QAMAC,c,GAAAA,c;;AA3BhB;;AACA;;;;AAEO,SAASH,eAAT,CAAyBI,UAAzB,EAAiE;AACpE,QAAI,0BAAcA,UAAd,4BAAJ,EAAmD;AAC/C,eAAO,IAAP;AACH,KAFD,MAEO,IAAI,0BAAcA,UAAd,8BAAJ,EAAqD;AACxD,eAAO,KAAP;AACH,KAFM,MAEA,IAAIA,WAAWC,QAAX,CAAoBC,IAAxB,EAA8B;AACjC,eAAO,wBAAYF,WAAWC,QAAX,CAAoBC,IAApB,CAAyBC,MAAzB,CAAgC,CAAhC,CAAZ,CAAP;AACH,KAFM,MAEA;AACH,eAAO,uBAAgBH,WAAWC,QAAX,CAAoBG,SAApC,EAA+CC,MAA/C,GAAwD,CAA/D;AACH;AACJ;;AAEM,SAASR,mBAAT,CAA6BS,KAA7B,EAAoC;AACvC,WAAO,UAACC,YAAD,EAAkB;AACrB,eAAO,IAAID,KAAJ,CAAUC,YAAV,CAAP;AACH,KAFD;AAGH;;AAEM,SAAST,qBAAT,CAA+BU,OAA/B,EAAwC;AAC3C,WAAO,UAACD,YAAD,EAAkB;AACrB,eAAOC,QAAQD,YAAR,CAAP;AACH,KAFD;AAGH;;AAEM,SAASR,cAAT,CAAwBC,UAAxB,EAAwD;AAC3D,QAAIJ,gBAAgBI,UAAhB,CAAJ,EAAiC;AAC7B,eAAOH,oBAAoBG,WAAWC,QAA/B,CAAP;AACH,KAFD,MAEO;AACH,eAAOH,sBAAsBE,WAAWC,QAAjC,CAAP;AACH;AACJ","file":"providers.js","sourcesContent":["import {ClassProviderLabel, FactoryProviderLabel, PrimaryDefinition} from './index';\nimport {hasAnnotation, isUpperCase} from './utils';\n\nexport function isClassProvider(definition: PrimaryDefinition): boolean {\n    if (hasAnnotation(definition, ClassProviderLabel)) {\n        return true;\n    } else if (hasAnnotation(definition, FactoryProviderLabel)) {\n        return false;\n    } else if (definition.provider.name) {\n        return isUpperCase(definition.provider.name.charAt(0))\n    } else {\n        return Reflect.ownKeys(definition.provider.prototype).length > 0;\n    }\n}\n\nexport function createClassProvider(Class) {\n    return (dependencies) => {\n        return new Class(dependencies);\n    }\n}\n\nexport function createFactoryProvider(Factory) {\n    return (dependencies) => {\n        return Factory(dependencies);\n    }\n}\n\nexport function createProvider(definition : PrimaryDefinition) {\n    if (isClassProvider(definition)) {\n        return createClassProvider(definition.provider);\n    } else {\n        return createFactoryProvider(definition.provider);\n    }\n}\n"]}